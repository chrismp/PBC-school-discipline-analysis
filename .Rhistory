dat.merge.state <- filter(
.data = dat.merge.state,
dat.merge.state$PercentBlack < 1,
dat.merge.state$PercentBlack > 0,
dat.merge.state$WhiteEnrollment > 0,
dat.merge.state$TotalPunished < dat.merge.state$TotalEnrollment
)
dat.merge.state$PercentOfBlackStudentsPunished <- dat.merge.state$BlackStudentsPunished / dat.merge.state$BlackEnrollment
dat.merge.state$PercentOfWhiteStudentsPunished <- dat.merge.state$WhiteStudentsPunished / dat.merge.state$WhiteEnrollment
dat.merge.state$PercentOfNonBlackStudentsPunished <- dat.merge.state$TotalPunished / dat.merge.state$TotalEnrollment
dat.merge.state$PunishmentDisparityBlackVsWhite <- dat.merge.state$PercentOfBlackStudentsPunished - dat.merge.state$PercentOfWhiteStudentsPunished
dat.merge.state$PunishmentDisparityBlackVsNonBlack <- dat.merge.state$PercentOfBlackStudentsPunished - dat.merge.state$PercentOfNonBlackStudentsPunished
dat.merge.state$PunishmentDisproportion <- dat.merge.state$PercentBlack - dat.merge.state$BlackStudentsPercentOfPunished
dat.merge.state$TeacherStudentRatio <- dat.merge.state$TotalTeachers / dat.merge.state$TotalEnrollment
dat.cor.state <- func.cors(dat.merge.state)
# PALM BEACH COUNTY
dat.merge.pbc <- filter(
.data = dat.merge.state,
District.x == "PALM BEACH"
)
dat.cor.pbc <- func.cors(dat.merge.pbc)
# dat.merge.pbc$SchoolCapitalized <- func.simpleCap(dat.merge.pbc$School)
# MAKE DATAFRAMES
dat.output.punishmentRates.state <- func.makePunishmentRateData(dat = dat.merge.state, geography = "Florida")
dat.output.punishmentRates.pbc <- func.makePunishmentRateData(dat = dat.merge.pbc, geography = "Palm Beach County")
dat.output.punishmentRates.combined <- rbind(dat.output.punishmentRates.state, dat.output.punishmentRates.pbc)
# MAKE CHARTS
plotOutputDir <- "output/plots/"
# Pre-styling: Common styles for charts
# These fonts only work if your computer has them installed. Get 'em from Google Fonts.
# This bash script installs every Google Font on Debian-based OS's: https://gist.github.com/keeferrourke/d29bf364bd292c78cf774a5c37a791db
# hedFont <- "News Cycle"
hedFont <- "Pragati Narrow" # alternative choice for font
# Style snippets for all chartd
chartStyle.backgroundColor <- "#eeeeee"
chartStyle.lineColor <- "#cccccc"
chartStyle.trendLineThickness <- 0.5
chartStyle.caption <- "Chris Persaud / Datavizz.com\nSource: Florida Dept. of Education"
# Style snippets for scatterplots
chartStyle.scatterplot.dotSize <- 3
chartStyle.scatterplot.alpha <- 0.75
chartStyle.scatterplot.dotLabelSize <- chartStyle.scatterplot.dotSize * 1.125
chartStyle.scatterplot.dotStroke <- 0.5
# ggplot theme() functions for all charts
chartStyle.theme <- theme(
plot.title = element_text(
size = 20,
family = hedFont,
face = "bold"
),
plot.subtitle = element_text(
size = 13,
# family = hedFont,
# face = "bold",
margin = margin(
b = unit(20, "pt")
)
),
plot.caption = element_text(
size = 9,
face = "italic",
color = "#333333"
),
axis.line.x = element_line(
color = "#000000"
),
axis.title = element_text(
face = "bold"
),
axis.ticks = element_line(
color = chartStyle.lineColor
),
axis.title.x = element_text(
margin = margin(
t = 10
)
),
axis.title.y = element_text(
margin = margin(
r = 10
)
),
axis.text = element_text(
size = 12
),
plot.background = element_rect(
fill = chartStyle.backgroundColor
),
panel.background = element_rect(
fill = chartStyle.backgroundColor
),
panel.grid.major = element_line(
color = chartStyle.lineColor,
size = 0.25
),
panel.grid.minor = element_blank(),
plot.margin = margin(
t = 5,
r = 5,
b = 5,
l = 5
)
)
chartStyle.theme.bar <- theme(
axis.line.x = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
legend.position = "none"
)
# Bar chart: Punishment rates by race, PBC vs Florida
chartStyle.PBCvFL.barWidth <- 0.75
dat.output.punishmentRates.combined$Group <- factor(
x = dat.output.punishmentRates.combined$Group,
levels = c("Total","Black","Hispanic","White") # Rearrange the order in which bars will appear
)
chart.PBCvFL <- ggplot(
data = dat.output.punishmentRates.combined,
aes(
fill = Group,
x = Geography,
y = PunishmentRate
)
) +
geom_bar(
position = position_dodge(),
stat = "identity",
width = chartStyle.PBCvFL.barWidth
) +
scale_fill_manual(
values = c("#66c2a5","#fc8d62","#8da0cb","#e78ac3")
) +
scale_x_discrete(
limits = c("Florida","Palm Beach County"),
labels= c("Florida","Palm\nBeach\nCounty"),
expand = c(0,chartStyle.PBCvFL.barWidth)
) +
scale_y_continuous(
name = "Percent of students punished",
labels = func.percentFormatX,
expand = c(0,0),
breaks = seq(
from = 0,
to = max(dat.output.punishmentRates.combined$PunishmentRate),
by = 0.05
)
) +
geom_text(
data = subset(dat.output.punishmentRates.combined, Geography == "Palm Beach County"),
aes(
label = Group,
y = 0.005
),
position = position_dodge(chartStyle.PBCvFL.barWidth),
hjust = 0,
color = "#ffffff",
fontface = "bold"
) +
coord_flip() +
labs(
title = "Florida schools punish black kids more than twice as much as white peers",
subtitle = "In Palm Beach County, black students were punished three times more often than white pupils\nin the 2016-17 school year",
caption = chartStyle.caption
) +
chartStyle.theme +
chartStyle.theme.bar +
theme(
panel.grid.major.y = element_blank(),
axis.text.y = element_text(
hjust = 0
),
plot.title = element_text(
hjust = 2.75
),
plot.subtitle = element_text(
hjust = 0.25
)
)
chart.PBCvFL
ggsave(
filename = "PBCvFL.png",
plot = chart.PBCvFL,
device = "png",
path = plotOutputDir,
width = 200,
height = 150,
units = "mm",
dpi = 144
)
# Scatterplot: % white students punished vs % black students punished, by school in PBC
chart.WhiteBlackPunishmentScatter <- ggplot(
data = dat.merge.pbc,
aes(
x = PercentOfWhiteStudentsPunished,
y = PercentOfBlackStudentsPunished
)
) +
geom_point(
size = chartStyle.scatterplot.dotSize,
alpha = chartStyle.scatterplot.alpha,
fill = "#ff8a59",
shape = 21,
stroke= ifelse(
test = dat.merge.pbc$PercentOfBlackStudentsPunished > 0.6,
yes = chartStyle.scatterplot.dotStroke,
no = ifelse(
test = dat.merge.pbc$PercentOfWhiteStudentsPunished > 0.3,
yes = chartStyle.scatterplot.dotStroke,
no = 0
)
)
) +
geom_smooth(
method = "lm",
se = F,
size = chartStyle.trendLineThickness,
color = "black"
) +
geom_text( # Highlight school with highest rate of punishing black students
aes(
label = ifelse(
test = PercentOfBlackStudentsPunished > 0.6,
yes = as.character(
x = str_title_case(
x = tolower(
x = School
)
)
),
no = ''
)
),
hjust = 1.06,
vjust = 1,
size = chartStyle.scatterplot.dotLabelSize
) +
geom_text( # Highlight school with highest rate of punishing whites relative to blacks
aes(
label = ifelse(
test = PercentOfWhiteStudentsPunished > 0.3,
yes = as.character(
x = str_title_case(
x = tolower(
x = School
)
)
),
no = ''
)
),
hjust = 1.04,
vjust = 1.5,
size = chartStyle.scatterplot.dotLabelSize
) +
scale_x_continuous(
name = "Percent of white students punished",
labels = func.percentFormatX,
breaks = seq(
from = min(dat.merge.pbc$PercentOfWhiteStudentsPunished),
to = max(dat.merge.pbc$PercentOfWhiteStudentsPunished),
by = 0.05
)
) +
scale_y_continuous(
name = "Percent of black students punished",
labels = func.percentFormatY,
expand = c(0,0),
breaks = seq(
from = min(dat.merge.pbc$PercentOfBlackStudentsPunished),
to = max(dat.merge.pbc$PercentOfBlackStudentsPunished),
by = 0.1
)
) +
labs(
title = "Punishment rates for black students vs white in Palm Beach County",
subtitle = "Schools that punished white kids at high rates usually disciplined black pupils more often in the 2016-17 school year",
caption = chartStyle.caption
) +
coord_cartesian(clip = "off") +
chartStyle.theme +
theme(
axis.text.y = element_text(
hjust = 0
),
plot.title = element_text(
margin = margin(
b = 5,
l = -10
)
# hjust = 1.5
),
plot.subtitle = element_text(
# hjust = -0.5
)
)
chart.WhiteBlackPunishmentScatter
ggsave(
filename = "PBC-black-white-punishment-scatter.png",
plot = chart.WhiteBlackPunishmentScatter,
device = "png",
path = plotOutputDir,
width = 200,
height = 150,
units = "mm",
dpi = 144
)
# Scatterplot: Black punishment vs nonblack punishment in PBC
chart.NonblackBlackPunishmentScatter <- ggplot(
data = dat.merge.pbc,
aes(
x = PercentOfNonBlackStudentsPunished,
y = PercentOfBlackStudentsPunished
)
) +
geom_point(
size = chartStyle.scatterplot.dotSize,
alpha = chartStyle.scatterplot.alpha,
fill = "#ff8a59",
shape = 21,
stroke= ifelse(
test = dat.merge.pbc$PercentOfBlackStudentsPunished > 0.6,
yes = chartStyle.scatterplot.dotStroke,
no = 0
)
) +
geom_smooth(
method = "lm",
se = F,
size = chartStyle.trendLineThickness,
color = "black"
) +
geom_text( # Highlight school with highest rate of punishing black students
aes(
label = ifelse(
test = PercentOfBlackStudentsPunished > 0.6,
yes = as.character(
x = str_title_case(
x = tolower(
x = School
)
)
),
no = ''
)
),
hjust = 1.06,
vjust = 1,
size = chartStyle.scatterplot.dotLabelSize
) +
scale_x_continuous(
name = "Percent of nonblack students punished",
labels = func.percentFormatX,
breaks = seq(
from = min(dat.merge.pbc$PercentOfNonBlackStudentsPunished),
to = max(dat.merge.pbc$PercentOfNonBlackStudentsPunished),
by = 0.05
)
) +
scale_y_continuous(
name = "Percent of black students punished",
labels = func.percentFormatY,
expand = c(0,0),
breaks = seq(
from = min(dat.merge.pbc$PercentOfBlackStudentsPunished),
to = max(dat.merge.pbc$PercentOfBlackStudentsPunished),
by = 0.1
)
) +
labs(
title = "Punishment rates for black students vs non-black in Palm Beach County",
subtitle = "Schools that punished non-black students usually punished black pupils at higher rates in 2016-17",
caption = chartStyle.caption
) +
coord_cartesian(clip = "off") +
chartStyle.theme +
theme(
axis.text.y = element_text(
hjust = 0
),
plot.title = element_text(
margin = margin(
b = 5,
l = -10
)
# hjust = 1.5
),
plot.subtitle = element_text(
# hjust = -0.5
)
)
chart.NonblackBlackPunishmentScatter
ggsave(
filename = "PBC-black-nonblack-punishment-scatter.png",
plot = chart.NonblackBlackPunishmentScatter,
device = "png",
path = plotOutputDir,
width = 200,
height = 150,
units = "mm",
dpi = 144
)
# Diverging chart: Black-white punishment disparity by school
# More info: http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html#Diverging%20Bars
dat.merge.pbc$BlackWhitePunishmentDisparityCategory <- ifelse(
test = dat.merge.pbc$PunishmentDisparityBlackVsWhite > 0,
yes = "Black",
no= "White"
)
chart.WhiteBlackDisparityBySchool <- ggplot(
data = dat.merge.pbc,
aes(
x = reorder(
as.character(
x = str_title_case(
x = tolower(
x = School
)
)
),
PunishmentDisparityBlackVsWhite
),
y = PunishmentDisparityBlackVsWhite,
label = PunishmentDisparityBlackVsWhite
)
) +
geom_bar(
stat = "identity",
aes(
fill = BlackWhitePunishmentDisparityCategory
),
width = 0.5
) +
scale_fill_manual(
# name = "Black-white punishment disparity",
values = c("#f1a340","#998ec3")
) +
scale_y_continuous(
breaks = seq(
from = -0.1,
to = max(dat.merge.pbc$PunishmentDisparityBlackVsWhite),
by = 0.1
),
name = element_blank(),
position = "right", # Because of coord_flip(), this will put scale up top
labels = func.percentFormatX # Use the x-axis function since this chart's axes will be flipped
) +
labs(
title = "Most Palm Beach County schools punish black students more often than white students",
subtitle = "Percent of white students punished minus percent of black students punished in the 2016-17 school year",
caption = chartStyle.caption
) +
coord_flip() +
chartStyle.theme +
chartStyle.theme.bar +
theme(
plot.subtitle = element_text(
margin = margin(
b = 0
)
),
axis.text.y = element_text(
size = 10
)
)
chart.WhiteBlackDisparityBySchool
ggsave(
filename = "PBC-black-white-punishment-disparity-by-school-diverging-bar.png",
plot = chart.WhiteBlackDisparityBySchool,
device = "png",
path = plotOutputDir,
width = 200,
height = 800,
units = "mm",
dpi = 144
)
# # WRITE TO CSVs
#   outputDir <- "output/"
#   write.csv(
#     x = dat.output.punishmentRates.state,
#     file = paste0(outputDir,"Punishment and enrollment by race - state.csv"),
#     row.names = F
#   )
#   write.csv(
#     x = dat.output.punishmentRates.pbc,
#     file = paste0(outputDir,"Punishment and enrollment by race - PBC.csv"),
#     row.names = F
#   )
library(ggplot2)
chart <- ggplot(
data = cars,
aes(
x = speed,
y = dist
)
) +
geom_point() +
labs(
title = "Here is a very long title that will need a\nlinebreak here",
subtitle = "This subtitle will also have\na linebreak"
) +
theme(
plot.title = element_text(
hjust = -0.1
)
)
chart
ggsave(
filename = "~/Desktop/myplot.png",
plot = chart,
# type = "cairo",
height = 4,
width = 6,
dpi = 150)
